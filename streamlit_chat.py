import streamlit as st
import json
import openai
from streamlit_chat import message

# OpenAI API –∫–ª—é—á —Ç–µ–ø–µ—Ä—å —á–∏—Ç–∞–µ—Ç—Å—è –∏–∑ —Å–µ–∫—Ä–µ—Ç–æ–≤ Streamlit
openai.api_key = st.secrets["OPENAI_API_KEY"]

with open('chatbot/crm_data.json', 'r', encoding='utf-8') as f:
    crm_data = json.load(f)

client_names = [client["client_name"] for client in crm_data]

st.set_page_config(page_title="–ò–ò-–ø—Ä–æ–¥–∞–∂–Ω–∏–∫ ‚Äî —á–∞—Ç", page_icon="ü§ñ")
st.title("ü§ñ –ò–ò-–ø—Ä–æ–¥–∞–∂–Ω–∏–∫ ‚Äî —á–∞—Ç-–¥–µ–º–æ")

if "client" not in st.session_state:
    st.session_state.client = client_names[0]
if "history" not in st.session_state:
    st.session_state.history = []

st.sidebar.header("CRM")
st.session_state.client = st.sidebar.selectbox("–í—ã–±–µ—Ä–∏—Ç–µ –∫–ª–∏–µ–Ω—Ç–∞:", client_names, index=client_names.index(st.session_state.client))
client_info = next(c for c in crm_data if c["client_name"] == st.session_state.client)
st.sidebar.write(client_info)

st.markdown("---")

for i, (user, bot) in enumerate(st.session_state.history):
    message(user, is_user=True, key=f"user_{i}")
    message(bot, is_user=False, key=f"bot_{i}")

user_input = st.text_input("–í–∞—à –∑–∞–ø—Ä–æ—Å", key="input")

if st.button("–û—Ç–ø—Ä–∞–≤–∏—Ç—å") or (user_input and st.session_state.get("last_input") != user_input):
    if user_input:
        st.session_state["last_input"] = user_input
        prompt = f"""
        –ö–ª–∏–µ–Ω—Ç: {client_info['client_name']}
        –ü—Ä–µ–¥—ã–¥—É—â–∞—è –ø–æ–∫—É–ø–∫–∞: {client_info['last_purchase']}
        –ë—é–¥–∂–µ—Ç: {client_info['budget']} —Ä—É–±.
        –°—Ç–∞—Ç—É—Å —Å–¥–µ–ª–∫–∏: {client_info['deal_status']}
        –ó–∞–ø—Ä–æ—Å –∫–ª–∏–µ–Ω—Ç–∞: {user_input}
        ---
        –¢—ã ‚Äî –æ–ø—ã—Ç–Ω—ã–π –ø—Ä–æ–¥–∞–∂–Ω–∏–∫ –ø—Ä–µ–º–∏—É–º-–∞–≤—Ç–æ. –û—Ç–≤–µ—Ç—å –∫–ª–∏–µ–Ω—Ç—É, –ø—Ä–µ–¥–ª–æ–∂–∏ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ –∏–ª–∏ upsell, —É—á–∏—Ç—ã–≤–∞—è –µ–≥–æ –±—é–¥–∂–µ—Ç, —Å—Ç–∞—Ç—É—Å —Å–¥–µ–ª–∫–∏ –∏ –∏—Å—Ç–æ—Ä–∏—é –ø–æ–∫—É–ø–æ–∫. –ë—É–¥—å –≤–µ–∂–ª–∏–≤, –ø–∏—à–∏ –Ω–∞ —Ä—É—Å—Å–∫–æ–º.
        """
        response = openai.ChatCompletion.create(
            model="gpt-3.5-turbo",
            messages=[
                {"role": "system", "content": "–¢—ã ‚Äî –æ–ø—ã—Ç–Ω—ã–π –ø—Ä–æ–¥–∞–∂–Ω–∏–∫ –ø—Ä–µ–º–∏—É–º-–∞–≤—Ç–æ."},
                {"role": "user", "content": prompt}
            ]
        )
        answer = response['choices'][0]['message']['content']
        st.session_state.history.append((user_input, answer))
        st.experimental_rerun()

if st.button("–û—á–∏—Å—Ç–∏—Ç—å –¥–∏–∞–ª–æ–≥"):
    st.session_state.history = []
    st.session_state["last_input"] = ""
    st.experimental_rerun() 